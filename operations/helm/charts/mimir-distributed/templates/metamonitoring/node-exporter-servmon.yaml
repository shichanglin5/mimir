{{- if and .Values.metaMonitoring.grafanaAgent.enabled .Values.metaMonitoring.grafanaAgent.metrics.enabled .Values.metaMonitoring.grafanaAgent.metrics.scrapeK8s.enabled }}
{{- with .Values.metaMonitoring.serviceMonitor }}
{{- if .enabled }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ include "mimir.resourceName" (dict "ctx" $ "component" "node-exporter") }}
  namespace: {{ .namespace | default $.Release.Namespace | quote }}
  labels:
    {{- include "mimir.labels" (dict "ctx" $ "component" "meta-monitoring") | nindent 4 }}
    {{- with .labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with .annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  endpoints:
    - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
      {{- with .interval }}
      interval: {{ . }}
      {{- end }}
      {{- with .scrapeTimeout }}
      scrapeTimeout: {{ . }}
      {{- end }}
      port: metrics
      honorLabels: true # retain namespace label from kubelet
      relabelings:
        {{- if kindIs "string" .clusterLabel }}
        - targetLabel: cluster
          replacement: "{{ .clusterLabel | default (include "mimir.clusterName" $) }}"
        {{- end }}
        {{- with .relabelings }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      metricRelabelings:
        - targetLabel: instance # replace so that the metrics work with the default metrics mixin
          sourceLabels:
            - node
      scheme: https
      tlsConfig:
        caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
  namespaceSelector:
    matchNames:
      - lens-metrics
  selector:
    matchLabels:
      name: node-exporter
{{- end -}}
{{- end -}}
{{- end -}}
